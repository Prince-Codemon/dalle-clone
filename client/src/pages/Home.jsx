import React, { useState, useEffect } from "react";
import { Loader, Card, FormField } from "../components";
const RenderCards = ({ data, title }) => {
  if (data?.length > 0)
    return data.map((post) => <Card key={post._id} {...post} />);
  return (
    <h2 className="text-[#6449ff] text-xl uppercase font-bold mt-5">{title}</h2>
  );
};
const URL = process.env.REACT_APP_SERVER_URL;


const Home = () => {
  const [loading, setLoading] = useState(false);
  const [allPosts, setAllPosts] = useState([]);
  const [searchText, setSearchText] = useState("");
   const [searchedResults, setSearchedResults] = useState();
   const [searchTimout, setSearchTimeout] = useState();
  useEffect(() => {
    const fetchPosts = async () => {
      setLoading(true);
      try {
        const response = await fetch(`${URL}/api/v1/posts`, {
          method: "GET",
          headers: {
            "Content-Type": "application/json",
            "SecretKey":  process.env.REACT_APP_SECRET_KEY,
          },
        });
        if (response.ok) {
          const data = await response.json();
          setAllPosts(data?.data.reverse());
          setLoading(false);
        }
      } catch (error) {
        console.log(error);
        alert("Something went wrong, please try again later");
        setLoading(false);
      }
    };
    fetchPosts();
  }, []);
  const handleSearchChange = (e) => {
    setSearchText(e.target.value);
    setSearchTimeout(
    setTimeout(() => {
      const searchResults = allPosts.filter(
        (post) =>
          post.name.toLowerCase().includes(searchText.toLowerCase()) ||
          post.prompt.toLowerCase().includes(searchText.toLowerCase())
      );
      setSearchedResults(searchResults);
    }, 500) )

  };

  return (
    <section className=" max-w-7xl mx-auto">
      <div>
        <h1 className="font-extrabold text-[#222328] text-[32px]">
          The community Showcase
        </h1>
        <p className="text-[#666e75] text-[14px] mt-2 max-w-[500px]">
          Browse through a collection of imaginative and visually stunning
          images generated by the DALL-E AI.
        </p>
      </div>
      <div className="mt-16">
        <FormField placeholder={"Search posts...."} labelName="Search Posts" name={'text' } type="text" value={searchText} handleChange={handleSearchChange} />
      </div>
      <div className="mt-10 ">
        {loading ? (
          <div className="flex justify-center items-center">
            <Loader />
          </div>
        ) : (
          <>
            {searchText && (
              <h2 className=" font-medium text-[#666e75] text-xl mb-3">
                Showing results for{" "}
                <span className="text-[#222328]">{searchText}</span>
              </h2>
            )}
            <div className="grid grid-cols-1 sm:grid-cols-3 lg:grid-cols-4 xs:grid-cols-2 gap-3">
              {searchText ? (
                <RenderCards data={searchedResults} title="No search results found" />
              ) : (
                <RenderCards data={allPosts} title="No posts found" />
              )}
            </div>
          </>
        )}
      </div>
    </section>
  );
};

export default Home;
